# This workflow will initiate a Veracode SCA Scan. 
# See: https://help.veracode.com/r/t_configure_pr_github

# Requires the following secrets:
# SRCCLR_API_TOKEN - generated when creating a new integration under the Agents tab
# SRCCLR_GITHUB_TOKEN - https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
# USER_EMAIL - email address, used in pull requests
# USER_NAME - username, used in pull requests

name: Veracode SCA Scan with Pull Request

# original flow:  https://github.com/tjarrettveracode/.github/blob/main/workflow-templates/sca.yml

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master/main branch
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main      

jobs:
  opensource-scan-for-PR:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: SCA Agent scan
      # if: ${{ secrets.SRCCLR_API_TOKEN }} &&  ${{ secrets.SRCCLR_GITHUB_TOKEN}}
      env: # Set the secret as an input
        # SCA agent activation token
        SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        SRCCLR_SCM_TYPE: GITHUB
        # See: https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
        SRCCLR_SCM_TOKEN: ${{ secrets.SRCCLR_GITHUB_TOKEN }} 
        # Generate a pull request when libraries contain calls to vulnerable methods
        SRCCLR_PR_ON: methods
        # Do not include potentially build-breaking upgrades in a pull request
        SRCCLR_NO_BREAKING_UPDATES: true
        # Generate a pull request if there are no open pull requests with the exact same changes
        SRCCLR_IGNORE_CLOSED_PRS: true
        SRCCLR_SCM_URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
        EXTRA_ARGS: '--recursive --update-advisor --pull-request --unmatched'
      run: |
        echo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
        git config --global user.email "${{ secrets.USER_EMAIL }}"
        git config --global user.name "${{ secrets.USER_NAME }}"
        curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan $EXTRA_ARGS
